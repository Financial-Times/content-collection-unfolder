version: 2
jobs:
  build:
    docker:
      - image: golang:1
    working_directory: content-collection-unfolder
    environment:
      GOPATH: /go
      CIRCLE_TEST_REPORTS: /tmp/test-results
      CIRCLE_COVERAGE_REPORT: /tmp/coverage-results

    steps:
      - checkout
      - run:
          name: External Dependencies
          command: |
            GO111MODULE=off go get github.com/mattn/goveralls
            GO111MODULE=off go get github.com/jstemmer/go-junit-report
            curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $(go env GOPATH)/bin v1.18.0
            git clone git@github.com:Financial-Times/upp-coding-standard.git
      - run:
          name: Create Test Folders
          command: |
            mkdir -p $CIRCLE_TEST_REPORTS
            mkdir -p $CIRCLE_COVERAGE_REPORT
      - run:
          name: Go Build
          command: go build -mod=readonly -v
      - run:
          name: Run linters
          command: golangci-lint run --new-from-rev=master --config upp-coding-standard/golangci-config/.golangci.yml
      - run:
          name: Run Tests
          command: go test -mod=readonly -race -cover -coverprofile=${CIRCLE_COVERAGE_REPORT}/coverage.out ./... | go-junit-report > ${CIRCLE_TEST_REPORTS}/junit.xml
      - run:
          name: Upload Coverage
          command: goveralls -coverprofile=${CIRCLE_COVERAGE_REPORT}/coverage.out -service=circle-ci -repotoken=${COVERALLS_TOKEN}
      - store_test_results:
          path: /tmp/test-results
  dockerfile:
    working_directory: /content-collection-unfolder
    docker:
      - image: docker:1.18
    steps:
      - checkout
      - setup_docker_engine
      - run:
          name: Build Dockerfile
          command: docker build .
workflows:
  version: 2
  test-and-build-docker:
    jobs:
      - build
      - dockerfile:
          requires:
            - build
